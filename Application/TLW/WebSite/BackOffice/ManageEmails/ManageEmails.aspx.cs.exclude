using System;
using System.Collections;
using System.Configuration;
using System.Data;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.HtmlControls;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;

public partial class BackOffice_ManageEmails_ManageEmails : System.Web.UI.Page
{
   // EmailClass objEmail;

    BackofficeClass objBackoffice = new BackofficeClass();
    //  GrantClass objGrant; /* Commented by Netsmartz for resolving compile time issues*/
    DataSet DS = new DataSet();

    protected void Page_Load(object sender, EventArgs e)
    {
        //objGrant = new GrantClass(objBackoffice.OpenConnection());
       // objEmail = new EmailClass(objBackoffice.sqlconnection);

        if (!IsPostBack)
        {
            ddlEmail.SelectedIndex = 0;

          /*  ddlSignatureID.DataSource = objBackoffice.GET_SignatureInfo();
            ddlSignatureID.DataTextField = "SIGNATURE_NAME";
            ddlSignatureID.DataValueField = "SIGNATURE_ID";
            ddlSignatureID.DataBind();

            ddlSignatureID.SelectedIndex = 0;
            */
            lblTo.Text = "JohnSmith@Address.com";
            lblFrom.Text = ConfigurationSettings.AppSettings["FROMNAME"];

            fillEmail();
        }
    }
    protected void Page_PreRender(object sender, EventArgs e)
    {
        lblSubject.Text = "";
        if (ddlEmail.SelectedValue == "Email_Account_Create.htm")
        {
            lblSubject.Text = ConfigurationSettings.AppSettings["EMAIL_SUBJECT_ACCOUNT_CREATE"];
        }
        if (ddlEmail.SelectedValue == "Email_ForgotPassword.htm")
        {
            lblSubject.Text = ConfigurationSettings.AppSettings["EMAIL_SUBJECT_FORGOT_PASSWORD"];
        }
        if (ddlEmail.SelectedValue == "Email_ContactUs.htm")
        {
            lblSubject.Text = ConfigurationSettings.AppSettings["EMAIL_SUBJECT_CONTACTUS_RECEIPT"];
        }
        if (ddlEmail.SelectedValue == "Email_Synopsis_Submitted.htm")
        {
            lblSubject.Text = ConfigurationSettings.AppSettings["EMAIL_SUBJECT_SYNOPSIS_SUBMITTED"];
        }
        if (ddlEmail.SelectedValue == "Email_Proposal_Submitted.htm")
        {
            lblSubject.Text = ConfigurationSettings.AppSettings["EMAIL_SUBJECT_PROPOSAL_SUBMITTED"];
        }
        if (ddlEmail.SelectedValue == "Email_Synopsis_Approved.htm")
        {
            lblSubject.Text = ConfigurationSettings.AppSettings["EMAIL_SUBJECT_SYNOPSIS_APPROVED"];
        }
        if (ddlEmail.SelectedValue == "Email_Proposal_Approved.htm")
        {
            lblSubject.Text = ConfigurationSettings.AppSettings["EMAIL_SUBJECT_PROPOSAL_APPROVED"];
        }
        if (ddlEmail.SelectedValue.StartsWith("Email_Synopsis_Decline"))
        {
            lblSubject.Text = ConfigurationSettings.AppSettings["EMAIL_SUBJECT_SYNOPSIS_DECLINE"];
        }
        if (ddlEmail.SelectedValue.StartsWith("Email_Proposal_Decline"))
        {
            lblSubject.Text = ConfigurationSettings.AppSettings["EMAIL_SUBJECT_PROPOSAL_DECLINE"];
        }

        objBackoffice.CloseConnection();
    }

    protected void ddlSignatureID_SelectedIndexChanged(object sender, EventArgs e)
    {
        fillEmail();
    }

    protected void ddlEmail_SelectedIndexChanged(object sender, EventArgs e)
    {
        fillEmail();
    }

    private void fillEmail()
    {
        try
        {
        
            /*  Commented by Netsmartz for resolving compile time issues    objEmail.AddBodyReplace("#NAME#", "John Smith");
            objEmail.AddBodyReplace("#EMAIL#", lblTo.Text);
            objEmail.AddBodyReplace("#SUBJECT#", "I am requesting support for AGNR-08-0000. My Zip Code location is 12345");
            objEmail.AddBodyReplace("#BODY#", "I would like some reviews concerning defining my project scope. Please have someone get in touch with me that has some background experience in medicine.");

             * string sGrantID = objGrant.Gnt_SEARCH_GrantInfo("", "", "", new DateTime(1980, 1, 1), DateTime.Now, "").Tables[0].Rows[0]["GRANT_ID"].ToString();
             objEmail.FillGrantInfo(sGrantID);
             objEmail.BodyTemplate = ddlEmail.SelectedValue;

             objEmail.FillSignatureInfo(ddlSignatureID.SelectedValue);

            lblBody.Text = objEmail.Write();*/
        }
        catch (Exception ex)
        {
            Response.Write(ex.Message + "<br />***Web-site Administrator: please make sure there is at lease 1 grant in the DB that is not deleted");
        }
    }

}